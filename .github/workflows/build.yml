name: Build and deploy jekyll site

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  
# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  jekyll-build:
    name: ðŸ”¨ Build
    runs-on: ubuntu-22.04
    steps:
      - name: ðŸ“‚ checkout
        uses: actions/checkout@v3

      - name: ðŸ§ž grant necessary filesystem access
        run: chmod 0777 ./docs

      - name: ðŸ¦¶ populate footer data
        run: |
          echo -e "\n" >> ./docs/_config.yml
          echo -e "commit: $(echo ${{ github.sha }} | cut -c1-7)" >> ./docs/_config.yml
          echo -e "\n" >> ./docs/_config.yml
          echo -e "lastUpdated: '$(date +'%Y-%m-%dT%H:%M:%S')'" >> ./docs/_config.yml

      - name: ðŸ”¨ build
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "docker-compose.yml"
          up-flags: --abort-on-container-exit
          
      - name: ðŸ”¼ upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./docs/_site"
          
  # Deployment job
  deploy:
    name: ðŸš€ Deployment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: jekyll-build
    steps:
      - name: ðŸš€ deploy
        id: deployment
        uses: actions/deploy-pages@v2.0.0
        with:
          preview: ${{ github.event_name == 'pull_request' }}
          
